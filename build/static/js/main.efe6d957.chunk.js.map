{"version":3,"sources":["components/Navbar.js","views/Home.js","components/CustomAlert.js","views/Login.js","views/Register.js","views/Dashboard.js","views/Auth.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","props","Navbar","color","dark","expand","Container","NavbarBrand","href","Home","Jumbotron","className","Button","Row","Col","md","src","alt","Card","body","inverse","CardBody","CardTitle","CardText","CustomAlert","UncontrolledAlert","msg","type","message","Login","state","msgBanner","show","redirect","event","this","setState","target","name","value","preventDefault","username","password","fetch","method","headers","JSON","stringify","response","ok","Error","statusText","json","data","sessionStorage","setItem","token","role","to","sm","size","offset","Form","onSubmit","handleSubmit","bind","FormGroup","Label","Input","onChange","handleChange","Component","Dashboard","clear","title","description","getItem","window","location","reload","id","rows","map","ticket","key","handleDelete","deleteTicket","Table","responsive","colSpan","change","submit","block","onClick","logout","TableRow","useState","modal","setModal","toggle","Modal","isOpen","ModalHeader","urgent","Badge","ModalBody","ModalFooter","AddTicket","for","Auth","loggedIn","App","exact","path","Register","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.efe6d957.chunk.js","sourcesContent":["import React from \"react\";\nimport { Navbar, NavbarBrand, Container } from \"reactstrap\";\n\nconst Navigation = (props) => {\n  return (\n    <div>\n      <Navbar color=\"dark\" dark expand=\"md\">\n        <Container>\n          <NavbarBrand href=\"/\">Tick-it</NavbarBrand>\n        </Container>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport { Jumbotron, Container, Button, Row, Col, Card, CardBody, CardTitle, CardText } from \"reactstrap\";\nimport { FiFastForward, FiLock, FiCheckSquare, FiCheck } from \"react-icons/fi\";\n\nfunction Home() {\n  return (\n    <div>\n      <Jumbotron className=\"text-white\">\n        <Container>\n          <h1 className=\"display-3\">\n            Welcome to Tick-it\n            <FiCheck />\n          </h1>\n          <p className=\"lead\">\n            Much more than <span className=\"text-warning\">turn it off & on again</span>\n          </p>\n          <Button href=\"/login\" color=\"warning\">\n            Login\n          </Button>\n          <Button href=\"/register\" color=\"secondary\">\n            Register\n          </Button>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <Row className=\"text-center text-white\">\n          <Col>\n            <p className=\"text-warning featureIcon\">\n              <FiFastForward />\n            </p>\n            <h2>Quick</h2>\n          </Col>\n          <Col>\n            <p className=\"text-warning featureIcon\">\n              <FiLock />\n            </p>\n            <h2>Safe</h2>\n          </Col>\n          <Col>\n            <p className=\"text-warning featureIcon\">\n              <FiCheckSquare />\n            </p>\n            <h2>Reliable</h2>\n          </Col>\n        </Row>\n        <Row className=\"my-5\">\n          <Col md=\"3\">\n            <img className=\"img-thumbnail border border-warning\" src=\"/hardware.jpg\" alt=\"feature 1\" />\n          </Col>\n          <Col md=\"9\">\n            <Card body inverse className=\"bg-transparent border border-dark\">\n              <CardBody>\n                <CardTitle>\n                  <h3 className=\"text-warning\">Hardware Support</h3>\n                </CardTitle>\n                <CardText>Screen isn't turning on? Mouse not clicking? We can help fix any hardware related issues</CardText>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Row className=\"my-5\">\n          <Col md=\"9\">\n            <Card body inverse className=\"bg-transparent border border-dark\">\n              <CardBody>\n                <CardTitle>\n                  <h3 className=\"text-warning\">Software Support</h3>\n                </CardTitle>\n                <CardText>Programs not starting? Can't login? We support all enterprise grade software used across business today</CardText>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col md=\"3\">\n            <img className=\"img-thumbnail border border-warning\" src=\"/software.jpg\" alt=\"feature 2\" />\n          </Col>\n        </Row>\n        <Row className=\"my-5\">\n          <Col md=\"3\">\n            <img className=\"img-thumbnail border border-warning\" src=\"/mobile.jpg\" alt=\"feature 3\" />\n          </Col>\n          <Col md=\"9\">\n            <Card body inverse className=\"bg-transparent border border-dark\">\n              <CardBody>\n                <CardTitle>\n                  <h3 className=\"text-warning\">Mobile Support</h3>\n                </CardTitle>\n                <CardText>Out of the office? Need extra help? We can support all mobile & connectivity related matters</CardText>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { UncontrolledAlert } from \"reactstrap\";\n\nconst CustomAlert = (props) => {\n  return <UncontrolledAlert color={props.msg.type}>{props.msg.message}</UncontrolledAlert>;\n};\n\nexport default CustomAlert;\n","import React, { Component } from \"react\";\nimport { Container, Row, Col, Card, CardBody, CardTitle, Button, Form, FormGroup, Label, Input } from \"reactstrap\";\nimport { Redirect } from \"react-router-dom\";\nimport CustomAlert from \"../components/CustomAlert\";\n\nclass Login extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      msgBanner: {\n        message: \"\",\n        show: false,\n        type: \"\",\n      },\n      redirect: false,\n    };\n  }\n\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n  async handleSubmit(event) {\n    event.preventDefault();\n    if (this.state.username && this.state.password) {\n      try {\n        //Send data\n        const response = await fetch(`/api/auth/login`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            username: this.state.username,\n            password: this.state.password,\n          }),\n        });\n        //Check for ok response\n        if (!response.ok) {\n          //Throw error if not ok\n          throw Error(response.statusText);\n        }\n        // Set to json, put token in storage & redirect\n        const data = await response.json();\n        sessionStorage.setItem(\"token\", data.token);\n        sessionStorage.setItem(\"role\", data.role);\n        this.setState({\n          redirect: true,\n        });\n      } catch (error) {\n        this.setState({\n          msgBanner: {\n            message: \"Unauthorised. Please try again\",\n            show: true,\n            type: \"warning\",\n          },\n        });\n      }\n    } else {\n      this.setState({\n        msgBanner: {\n          message: \"Please ensure all fields are completed\",\n          show: true,\n          type: \"warning\",\n        },\n      });\n    }\n  }\n  render() {\n    const { redirect } = this.state;\n    if (redirect) {\n      return <Redirect to=\"/dashboard\" />;\n    }\n    return (\n      <div className=\"bg-login\">\n        <Container>\n          <Row>\n            <h1 className=\"mt-3 mx-auto text-warning\">Login</h1>\n          </Row>\n          <Row className=\"pt-2\">\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n              {this.state.msgBanner.show ? <CustomAlert msg={this.state.msgBanner} /> : \"\"}\n            </Col>\n          </Row>\n          <Row className=\"p-5\">\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n              <Card className=\"bg-transparent border border-none\">\n                <CardBody>\n                  <CardTitle>\n                    <Form onSubmit={this.handleSubmit.bind(this)}>\n                      <FormGroup>\n                        <Label className=\"text-white\">Username</Label>\n                        <Input type=\"username\" name=\"username\" onChange={this.handleChange.bind(this)} />\n                      </FormGroup>\n                      <FormGroup>\n                        <Label className=\"text-white\">Password</Label>\n                        <Input type=\"password\" name=\"password\" onChange={this.handleChange.bind(this)} />\n                      </FormGroup>\n                      <Button color=\"warning\">Submit</Button>\n                    </Form>\n                  </CardTitle>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col sm=\"12\" md={{ size: 10, offset: 1 }}>\n              <Row>\n                <h3 className=\"my-3 mx-auto text-warning\">Example Login Details</h3>\n              </Row>\n              <Row>\n                <Col md=\"4\">\n                  <Card body inverse color=\"dark\">\n                    <CardBody>\n                      <CardTitle>\n                        <h5 className=\"text-warning\">User 1</h5>\n                      </CardTitle>\n                      <p>\n                        <strong>U: </strong>user1\n                      </p>\n                      <p>\n                        <strong>P: </strong>user\n                      </p>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col md=\"4\">\n                  <Card body inverse color=\"dark\">\n                    <CardBody>\n                      <CardTitle>\n                        <h5 className=\"text-warning\">User 2</h5>\n                      </CardTitle>\n                      <p>\n                        <strong>U: </strong>user2\n                      </p>\n                      <p>\n                        <strong>P: </strong>user\n                      </p>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col md=\"4\">\n                  <Card body inverse color=\"dark\">\n                    <CardBody>\n                      <CardTitle>\n                        <h5 className=\"text-warning\">Engineer</h5>\n                      </CardTitle>\n                      <p>\n                        <strong>U: </strong>engineer1\n                      </p>\n                      <p>\n                        <strong>P: </strong>engineer\n                      </p>\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport { Container, Row, Col, Card, CardBody, CardTitle, Button, Form, FormGroup, Label, Input } from \"reactstrap\";\n\nfunction Login() {\n  return (\n    <div className=\"bg-register\">\n      <Container>\n        <Row>\n          <h1 className=\"mt-3 mx-auto text-warning\">Register</h1>\n        </Row>\n        <Row className=\"p-5\">\n          <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n            <Card className=\"bg-transparent border border-none\">\n              <CardBody>\n                <CardTitle>\n                  <Form>\n                    <FormGroup>\n                      <Label className=\"text-white\">Username</Label>\n                      <Input type=\"username\" name=\"username\" />\n                    </FormGroup>\n                    <FormGroup>\n                      <Label className=\"text-white\">Password</Label>\n                      <Input type=\"password\" name=\"password\" />\n                    </FormGroup>\n                    <FormGroup>\n                      <Label className=\"text-white\">Role</Label>\n                      <Input type=\"text\" name=\"role\" />\n                    </FormGroup>\n                    <Button color=\"warning\">Submit</Button>\n                  </Form>\n                </CardTitle>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col sm=\"12\" md={{ size: 10, offset: 1 }}>\n            <Row>\n              <h3 className=\"my-3 mx-auto text-warning\">Note</h3>\n            </Row>\n            <Row>\n              <Col md=\"12\">\n                <Card body inverse color=\"warning\">\n                  <CardBody>\n                    <CardTitle>\n                      <h5 className=\"text-light\">Please note: This register form has been disabled.</h5>\n                    </CardTitle>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { Component, useState } from \"react\";\nimport { Container, Row, Col, Button, Table, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, Badge } from \"reactstrap\";\nimport { Redirect } from \"react-router-dom\";\nimport CustomAlert from \"../components/CustomAlert\";\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      msgBanner: {\n        message: \"\",\n        show: false,\n      },\n      redirect: false,\n    };\n  }\n  logout() {\n    sessionStorage.clear();\n    this.setState({\n      redirect: true,\n    });\n  }\n\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    if (this.state.title && this.state.description) {\n      const token = sessionStorage.getItem(\"token\");\n      try {\n        //Send data\n        const response = await fetch(`/api/tickets?token=${token}`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            title: this.state.title,\n            description: this.state.description,\n          }),\n        });\n        //Check for ok response\n        if (!response.ok) {\n          //Throw error if not ok\n          throw Error(response.statusText);\n        }\n        window.location.reload(false);\n        this.setState({\n          msgBanner: {\n            message: \"Success. Ticket was created\",\n            show: true,\n            type: \"warning\",\n          },\n        });\n      } catch (error) {\n        this.setState({\n          msgBanner: {\n            message: \"Unauthorised. Please try again\",\n            show: true,\n            type: \"warning\",\n          },\n        });\n      }\n    } else {\n      this.setState({\n        msgBanner: {\n          message: \"Please ensure all fields are completed\",\n          show: true,\n          type: \"warning\",\n        },\n      });\n    }\n  }\n\n  async componentDidMount() {\n    try {\n      const token = sessionStorage.getItem(\"token\");\n      //Send data\n      const response = await fetch(`/api/tickets?token=${token}`);\n      //Check for ok response\n      if (!response.ok) {\n        //Throw error if not ok\n        throw Error(response.statusText);\n      }\n      // Set to json, put token in storage & redirect\n      const data = await response.json();\n      this.setState({\n        data: data,\n      });\n    } catch (error) {\n      this.setState({\n        redirect: true,\n      });\n    }\n  }\n\n  async deleteTicket(id) {\n    const token = sessionStorage.getItem(\"token\");\n    try {\n      //Send data\n      const response = await fetch(`/api/tickets/${id}?token=${token}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      //Check for ok response\n      if (!response.ok) {\n        //Throw error if not ok\n        throw Error(response.statusText);\n      }\n      window.location.reload(false);\n      this.setState({\n        msgBanner: {\n          message: \"Success. Ticket was deleted\",\n          show: true,\n          type: \"warning\",\n        },\n      });\n    } catch (error) {\n      this.setState({\n        msgBanner: {\n          message: \"Unauthorised. Please try again\",\n          show: true,\n          type: \"warning\",\n        },\n      });\n    }\n  }\n\n  render() {\n    const { redirect } = this.state;\n    if (redirect) {\n      return <Redirect to=\"/\" />;\n    }\n    if (this.state.data) {\n      let rows = this.state.data.data.map((ticket) => {\n        return <TableRow key={ticket.id} data={ticket} handleDelete={this.deleteTicket.bind(this)} />;\n      });\n      return (\n        <div className=\"bg-dashboard\">\n          <Container>\n            <Row className=\"py-3\">\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                {this.state.msgBanner.show ? <CustomAlert msg={this.state.msgBanner} /> : \"\"}\n              </Col>\n            </Row>\n            <Row>\n              <Col sm=\"12\" md={{ size: 10, offset: 1 }}>\n                <Row>\n                  <Col md=\"8\">\n                    <Table dark responsive>\n                      <thead>\n                        <tr>\n                          <th colSpan=\"2\">Ticket</th>\n                          <th></th>\n                        </tr>\n                      </thead>\n                      <tbody>{rows}</tbody>\n                    </Table>\n                  </Col>\n                  <Col md=\"4\">\n                    <AddTicket change={this.handleChange.bind(this)} submit={this.handleSubmit.bind(this)} />\n                    <Button block color=\"secondary\" onClick={this.logout.bind(this)}>\n                      Logout\n                    </Button>\n                  </Col>\n                </Row>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"bg-dashboard\">\n          <Container>Loading...</Container>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Dashboard;\n\nconst TableRow = (props) => {\n  const [modal, setModal] = useState(false);\n  const toggle = () => setModal(!modal);\n  return (\n    <tr>\n      <td colSpan=\"2\">{props.data.title}</td>\n      <td>\n        <Button color=\"warning\" onClick={toggle}>\n          View\n        </Button>\n      </td>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle}>\n          {props.data.title} {props.data.urgent ? <Badge color=\"warning\">Urgent</Badge> : \"\"}\n        </ModalHeader>\n        <ModalBody>{props.data.description}</ModalBody>\n        <ModalFooter>\n          <Button color=\"danger\" onClick={props.handleDelete.bind(this, props.data.id)}>\n            Delete\n          </Button>\n          <Button color=\"secondary\" onClick={toggle}>\n            Close\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </tr>\n  );\n};\n\nconst AddTicket = (props) => {\n  const [modal, setModal] = useState(false);\n  const toggle = () => setModal(!modal);\n  return (\n    <div>\n      <Button block color=\"warning\" onClick={toggle}>\n        Add Ticket\n      </Button>\n      <Modal isOpen={modal} toggle={toggle}>\n        <Form onSubmit={props.submit}>\n          <ModalHeader toggle={toggle}>Raise new ticket</ModalHeader>\n          <ModalBody>\n            <FormGroup>\n              <Label for=\"exampleEmail\">Title</Label>\n              <Input type=\"text\" name=\"title\" onChange={props.change} />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"exampleEmail\">Description</Label>\n              <Input type=\"textarea\" name=\"description\" onChange={props.change} />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"exampleSelect\">Urgent</Label>\n              <Input type=\"select\" name=\"urgent\" onChange={props.change}>\n                <option value=\"0\">No</option>\n                <option value=\"1\">Yes</option>\n              </Input>\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"warning\" type=\"submit\" onClick={toggle}>\n              Submit\n            </Button>\n            <Button color=\"secondary\" onClick={toggle}>\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Form>\n      </Modal>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Dashboard from \"./Dashboard\";\n\nclass Auth extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      redirect: false,\n    };\n  }\n\n  componentWillMount() {\n    const token = sessionStorage.getItem(\"token\");\n    if (token) {\n      this.setState({\n        loggedIn: true,\n      });\n    } else {\n      this.setState({\n        msgBanner: {\n          message: \"You are not authorised. Please log in\",\n          show: true,\n          type: \"warning\",\n        },\n        loggedIn: false,\n      });\n    }\n  }\n\n  render() {\n    if (this.state.loggedIn) {\n      return <Dashboard />;\n    } else {\n      return <Redirect to=\"/login\" />;\n    }\n  }\n}\n\nexport default Auth;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navigation from \"./components/Navbar\";\nimport Home from \"./views/Home\";\nimport Login from \"./views/Login\";\nimport Register from \"./views/Register\";\nimport Auth from \"./views/Auth\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navigation />\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/register\">\n            <Register />\n          </Route>\n          <Route path=\"/dashboard\">\n            <Auth />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles/main.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}